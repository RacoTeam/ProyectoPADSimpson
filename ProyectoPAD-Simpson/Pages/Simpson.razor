@page "/simpson"
@inject HttpClient Http
@inject NavigationManager _navigationManager
@inject ServicioApiEpisodios ServicioApiEpisodios

<h3>Frases de los Simpsons</h3>

<div>
    <div>
        <h4>Buscar por Personaje</h4>
        <p>Nombre del personaje:</p>
        <input type="text" @bind-value="nombrePersonaje" />
        @if (string.IsNullOrEmpty(nombrePersonaje) && nombrePersonajeInvalido)
        {
            <p style="color: red;">Ingrese el nombre del personaje.</p>
        }
        <p>Cantidad a mostrar:</p>
        <input type="text" @bind-value="cantidadFrase" />
        @if (cantidadInvalida)
        {
            <p style="color: red;">Busque una frase o más.</p>
        }
        <br />
        <br />
        <button @onclick="(async()=> await GenerarFrase())">Generar Frase/s</button>
        <br />
        <br />
    </div>
    <div>
        <h4>Frase Aleatoria</h4>
        <button @onclick="(async()=> await GenerarFraseAleatoria())">Generar Frase Aleatoria</button>
    </div>
</div>

<div>
    @if (listaFrase != null && listaEpisodios != null)
    {
        @for (int i = 0; i < listaFrase.Count; i++)
        {
            var personaje = listaFrase[i];
            var episodio = listaEpisodios[i];

            <div>
                <br />
                <h4>Personaje: @personaje.character</h4>
                <img src="@personaje.image" width="150" />
                <div>Frase: @personaje.quote</div>
                <p>Episodio: @episodio.episode</p>
                <img src=@("https://frinkiac.com/img/" + episodio.episode + "/" + episodio.timestamp) width="200" />
            </div>
        }
    }
</div>

@code {
    public class Personaje
    {
        public String? quote { get; set; }
        public String? character { get; set; }
        public String? image { get; set; }
        public String? characterDirection { get; set; }
    }

    public class Episodio
    {
        public int? id { get; set; }
        public String? episode { get; set; }
        public int? timestamp { get; set; }
    }

    List<Personaje>? listaFrase { get; set; }
    List<Episodio>? listaEpisodios { get; set; }
    Personaje? frase { get; set; }

    String? nombrePersonaje { get; set; }
    int cantidadFrase = 1;
    bool nombrePersonajeInvalido = false;
    bool cantidadInvalida = false;

    protected async Task GenerarFrase()
    {
        // Reviso que las entradas tengan valor y no esten vacias
        if (nombrePersonaje == null)
        {
            nombrePersonajeInvalido = true;
            return;
        }
        nombrePersonajeInvalido = false;

        if (cantidadFrase == 0)
        {
            cantidadInvalida = true;
            return;
        }
        else if (cantidadFrase == 1)
        {
            listaFrase = await Http.GetFromJsonAsync<List<Personaje>>("https://thesimpsonsquoteapi.glitch.me/quotes?character=" + nombrePersonaje);
        }
        else if (cantidadFrase > 1)
        {
            listaFrase = await Http.GetFromJsonAsync<List<Personaje>>("https://thesimpsonsquoteapi.glitch.me/quotes?count=" + cantidadFrase + "&character=" + nombrePersonaje);
        }

        cantidadInvalida = false;

        // Obtengo los episodios donde aparece cada frase
        listaEpisodios = null;

        foreach (var result in listaFrase)
        {
            var primerEpisodio = await ServicioApiEpisodios.ObtenerEpisodio("https://corsproxy.io/?https://frinkiac.com/api/search?q=" + result.quote);

            // Agregar el primer episodio a la lista
            if (primerEpisodio != null)
            {
                if (listaEpisodios == null)
                {
                    listaEpisodios = new List<Episodio>();
                }

                listaEpisodios.Add(primerEpisodio);
            }
        }

        _navigationManager.NavigateTo("simpson");
    }

    protected async Task GenerarFraseAleatoria()
    {
        listaFrase = await Http.GetFromJsonAsync<List<Personaje>>("https://thesimpsonsquoteapi.glitch.me/quotes");
        frase = listaFrase?.FirstOrDefault();
        listaEpisodios = null;

        if (frase != null)
        {
            var primerEpisodio = await ServicioApiEpisodios.ObtenerEpisodio("https://corsproxy.io/?https://frinkiac.com/api/search?q=" + frase.quote);

            // Agregar el primer episodio
            if (primerEpisodio != null)
            {
                if (listaEpisodios == null)
                {
                    listaEpisodios = new List<Episodio>();
                }

                listaEpisodios.Add(primerEpisodio);
            }
        }

        _navigationManager.NavigateTo("simpson");
    }
}
