@inherits LayoutComponentBase
@inject IJSRuntime JsRuntime
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IToastService toastServicio


<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        @* <div class="top-row px-4">
            <a href="aboutus">Nosotros</a>
            @if (usuarioId == 0)
            {
                <a href="login">Iniciar Sesión</a>
            }
            else
            {
                <a href="#" @onclick="CerrarSesion">Cerrar Sesión</a>
            }
        </div> *@

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<BlazoredToasts Position="Blazored.Toast.Configuration.ToastPosition.BottomRight"
    Timeout="5"
    ShowProgressBar="true"
    RemoveToastsOnNavigation="false"
    IconType="Blazored.Toast.Configuration.IconType.FontAwesome"
    SuccessClass="success-toast-override"
    SuccessIcon="fa fa-thumbs-up"
    ErrorIcon="fa fa-bug"
    WarningIcon="fa fa-warning"
    InfoIcon="fa fa-warning">

</BlazoredToasts>

@code {
    private int usuarioId;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        usuarioId = await sessionStorage.GetItemAsync<int>("id");
       // usuarioId = await ObtenerUsuarioIdDesdeSesion();
    }

    // private async Task<int> ObtenerUsuarioIdDesdeSesion()
    // {
    //     var usuarioId = await JsRuntime.InvokeAsync<int>("obtenerUsuarioIdDesdeSesion");
    //     return usuarioId;
    // }

    private async Task CerrarSesion()
    {
        // Lógica para cerrar sesión
        await sessionStorage.ClearAsync();
        await JsRuntime.InvokeVoidAsync("location.reload");
    }

    // private async Task CambiarUsuarioIdEnSesion(int nuevoUsuarioId)
    // {
    //     await JsRuntime.InvokeAsync<object>("cambiarUsuarioIdEnSesion", nuevoUsuarioId);
    //     usuarioId = nuevoUsuarioId;
    //     await InvokeAsync(StateHasChanged); // Actualiza la interfaz de usuario
    // }

    
}
